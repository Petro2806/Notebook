Minimum on segment:
1) Use two Fenwick trees with n = 2^k. 
n = 1 << (32 - __builtin_clz(n - 1));
2) One tree for normal array and one for reversed
3) When querying for minimum on the segment 
only consider segments [(i & (i + 1)), i] 
from trees that are COMPLETELY inside [l, r] 

Fenwick tree for adding on segment (prefixes):
1) Use 2 arrays: mult and add
2) upd(int i, int updMult, int updAdd) 
default Fenwick update.
3) add x on segment [l, r]:
	upd(l, x, -x * (l - 1));
	upd(r, -x, x * r);
4) to calculate sum on prefix r:
	sumAdd and sumMult - default Fenwick sum
	st - initial value of r
	ans = st * sumMult + sumAdd 
